package demo;

public class PackClass {
//	Java为每种基本数据类型分别设计了对应的类，称之为包装类(Wrapper Classes)，也有教材称为外覆类或数据类型类
//	
//			基本数据类型		对应的包装类
//			byte			Byte
//			short			Short
//			int				Integer
//			long			Long
//			char			Character
//			float			Float
//			double			Double
//			boolean			Boolean
	
//	每个包装类的对象可以封装一个相应的基本类型的数据，并提供了其它一些有用的方法。
//	包装类对象一经创建，其内容（所封装的基本类型数据值）不可改变。
	
//	基本类型和对应的包装类可以相互装换：
//		由基本类型向对应的包装类转换称为   装箱，	例如把 int 包装成 Integer 类的对象；
//		包装类向对应的基本类型转换称为       拆箱，	例如把 Integer 类的对象重新简化为 int。
	public static void main(String[] args) {
		int m = 200;
		Integer obj = new Integer(m);	//	手动装箱
		int n = obj.intValue();			//  手动拆箱
		System.out.println( " n = " + n );
		
		Integer obj1 = new Integer(200);
		System.out.println("obj等价于obj1？" + obj.equals(obj1));
		
		String str[] = {"123","123abc","abc123","abcxyz"};
		
		for(String str1:str) {
			try {
				int k = Integer.parseInt(str1, 10);
				System.out.println(str1 + "可以转换位整数" + k);
			}catch(Exception e){
				System.out.println(str1 + "无法转换为整数");
			}
		}
		
		String l = Integer.toString(m)
	}
}
